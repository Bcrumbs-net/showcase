import React, { Fragment } from "react";
import Head from "next/head";
import { ThemeProvider } from "styled-components";
import { charityTheme } from "../../theme/charity";
import { ResetCSS } from "../../assets/css/style";
import BCComponent from "../pool";
import BCLink from "../../../lib/containers/_Shared/BCLink";
import QUERY from "../graphql/showcase-query";
import { useQuery } from "@apollo/react-hooks";
import {
  GlobalStyle,
  CharityWrapper,
  ContentWrapper
} from "../../../lib/containers/Charity/charity.style";

export default (props) => {
  const { config, path } = props;
  try {
    const queryResult = useQuery(QUERY, {
      variables: {
        rootId: config.root,
        deep: config.deep,
        path,
      },
    });
    if (queryResult.loading) {
      return <div>Loading ...</div>;
    }
    if (queryResult.error) {
      return <div>Error loading data: {queryResult.error.message}</div>;
    }
    if (
      queryResult.data &&
      queryResult.data.contents &&
      queryResult.data.contents.length > 0
    ) {
      let data = queryResult.data.contents[0];
      let rootModelData = data.data.reduce(function(map, obj) {
        map[obj.Key] = obj.Value;
        return map;
      }, {});
      let isAR = config.lang == "AR";
      return (
        <ThemeProvider theme={charityTheme(rootModelData)}>
          <Fragment>
            {/* Start charity head section */}
            <Head>
              <title>{data.title}</title>
              <meta name="Description" content={data.metaDescription} />
              <meta name="theme-color" content={rootModelData.primary} />
              {/*<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />*/}
              <link
                rel="icon"
                type="image/png"
                sizes="32x32"
                href={rootModelData.favicon32}
              />
              <link
                rel="icon"
                type="image/png"
                sizes="16x16"
                href={rootModelData.favicon16}
              />
              <meta
                name="viewport"
                content="width=device-width, initial-scale=1.0"
              />
              {/* Load google fonts */}
              <link
                href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700,800&display=swap"
                rel="stylesheet"
              />
            </Head>
            <ResetCSS />
            <GlobalStyle />
            {/* End of charity head section */}
            {/* Start charity wrapper section */}
            <CharityWrapper>
              <ContentWrapper>
                {data.children &&
                  data.children
                    .filter((m) => m.online)
                    .map((model, index) => (
                      <BCComponent
                        key={`BCComponent${index}`}
                        modelId={model.modelId}
                        model={model}
                        isAR={isAR}
                      />
                    ))}
              </ContentWrapper>
              <BCLink />
            </CharityWrapper>
            {/* End of charity wrapper section */}
          </Fragment>
        </ThemeProvider>
      );
    } else {
      return <div>No Data Found</div>;
    }
  } catch (ex) {
    return <div>Error: {ex.message} </div>;
  }
};
